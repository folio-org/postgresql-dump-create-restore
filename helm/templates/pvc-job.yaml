{{- $Uuid := uuidv4 -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.psql.pvc.name }}-{{ $Uuid }}
  namespace: {{ .Values.psql.projectNamespace | quote }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.psql.pvc.storageClassName }}
  resources:
    requests:
      storage: {{ .Values.psql.pvc.storageSize }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "psql.fullname" . }}-{{ $Uuid }}
  namespace: {{ .Values.psql.projectNamespace | quote }}
spec:
  backoffLimit: {{ .Values.psql.job.backoffLimit }}
  ttlSecondsAfterFinished: {{ .Values.psql.job.ttlSecondsAfterFinished }}
  activeDeadlineSeconds: {{ .Values.psql.job.activeDeadlineSeconds }}
  template:
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.psql.job.container.image.repository }}:{{ .Values.psql.job.container.image.tag }}"
          imagePullPolicy: {{ .Values.psql.job.container.image.pullPolicy }}
          command: [{{ .Values.psql.job.container.command }}]
          env:
            - name: DB_BACKUP_NAME
              value: {{ .Values.psql.dbBackupName }}
            - name: EBS_VOLUME_MOUNT_PATH
              value: {{ .Values.psql.job.container.mountPath }}
            - name: ACTION
              value: {{ .Values.psql.job.action }}
            - name: RANCHER_CLUSTER_NAME
              value: {{ .Values.psql.clusterName }}
            - name: RANCHER_PROJECT_NAME
              value: {{ .Values.psql.projectNamespace }}
            - name: TENANT
              value: {{ .Values.psql.tenantBackupModulesForId }}
            - name: TENANT_ADMIN_USERNAME
              value: {{ .Values.psql.tenantBackupModulesForAdminUsername }}
            - name: TENANT_ADMIN_PASSWORD
              value: {{ .Values.psql.tenantBackupModulesForAdminPassword }}
            - name: S3_BACKUPS_BUCKET
              value: {{ .Values.psql.s3BackupsBucketName }}
            - name: S3_BACKUPS_DIRECTORY
              value: {{ .Values.psql.s3BackupsBucketDirectory }}
            - name: TEMPORARY_RDS_PASSWORD
              value: {{ .Values.rds.password }}
            - name: TEMPORARY_RDS_HOST
              value: {{ .Values.rds.host }}
            - name: TEMPORARY_RDS_USERNAME
              value: {{ .Values.rds.user }}
            - name: TEMPORARY_RDS_PORT
              value: {{ .Values.rds.port }}
            - name: TEMPORARY_RDS_DATABASE
              value: {{ .Values.rds.database }}
            {{- if ne .Values.rds.aws_access_key "1" }}
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.rds.aws_access_key }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.rds.aws_secret_key }}
            {{- end }}
          envFrom:
            - secretRef:
                name: {{ .Values.psql.job.container.s3CredentialsSecret }}
            - secretRef:
                name: {{ .Values.psql.job.container.dbCredentialsSecret }}
          volumeMounts:
            - name: {{ .Values.psql.job.container.volumeName }}
              mountPath: {{ .Values.psql.job.container.mountPath }}
          resources:
            {{- toYaml .Values.psql.job.container.resources | nindent 12 }}
      initContainers:
        - name: {{ .Values.psql.job.initContainer.name }}
          image: "{{ .Values.psql.job.initContainer.image.repository }}:{{ .Values.psql.job.initContainer.image.tag }}"
          imagePullPolicy: {{ .Values.psql.job.initContainer.image.pullPolicy }}
          # Change root owner of a mounted volume to postgres(1001) user
          command:
            - /bin/sh
            - -ec
            - |
              chown {{ .Values.psql.job.initContainer.postgresUserGroupId }} {{ .Values.psql.job.container.mountPath }}
          volumeMounts:
            - name: {{ .Values.psql.job.container.volumeName }}
              mountPath: {{ .Values.psql.job.container.mountPath }}
          resources:
            {{- toYaml .Values.psql.job.initContainer.resources | nindent 12 }}
      volumes:
        - name: {{ .Values.psql.job.container.volumeName }}
          persistentVolumeClaim:
            claimName: {{ .Values.psql.pvc.name }}-{{ $Uuid }}
      restartPolicy: {{ .Values.psql.job.container.restartPolicy }}
